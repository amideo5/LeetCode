class Solution {
    public int myAtoi(String s) {
        if (s == null || s.length() == 0) {
            return 0; // Handle empty or null string
        }

        int i = 0;
        while (i < s.length() && Character.isWhitespace(s.charAt(i))) {
            i++; // Skip leading whitespaces
        }

        if (i == s.length()) {
            return 0; // String consists of only whitespaces
        }

        int sign = 1;
        if (s.charAt(i) == '-' || s.charAt(i) == '+') {
            sign = (s.charAt(i) == '-') ? -1 : 1;
            i++;
        }

        long result = 0; // Use long to check for overflow
        while (i < s.length() && Character.isDigit(s.charAt(i))) {
            result = result * 10 + (s.charAt(i) - '0');

            // Check for overflow or underflow
            if (result * sign > Integer.MAX_VALUE) {
                return Integer.MAX_VALUE;
            } else if (result * sign < Integer.MIN_VALUE) {
                return Integer.MIN_VALUE;
            }

            i++;
        }

        return (int) (result * sign);
    }
}