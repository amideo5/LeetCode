class Solution {
    public int numFactoredBinaryTrees(int[] arr) {
        int MOD = 1000000007;
        Arrays.sort(arr);
        Map<Integer, Long> dp = new HashMap<>();
        
        for (int i = 0; i < arr.length; i++) {
            long count = 1;
            for (int j = 0; j < i; j++) {
                if (arr[i] % arr[j] == 0 && dp.containsKey(arr[i] / arr[j])) {
                    count += dp.get(arr[j]) * dp.get(arr[i] / arr[j]);
                    count %= MOD;
                }
            }
            dp.put(arr[i], count);
        }
        
        long total = 0;
        for (long count : dp.values()) {
            total += count;
            total %= MOD;
        }
        
        return (int) total;
    }
}