class Solution {
    public int knightDialer(int n) {
        long[][] dp = new long[n + 1][10];
        int MOD = 1000000007;

        for (int i = 0; i <= 9; i++) {
            dp[1][i] = 1;
        }

        int[][] moves = {
            {4, 6},   
            {6, 8},   
            {7, 9},   
            {4, 8},   
            {0, 3, 9},
            {},       
            {0, 1, 7},
            {2, 6},   
            {1, 3},   
            {2, 4}    
        };

        for (int i = 2; i <= n; i++) {
            for (int j = 0; j <= 9; j++) {
                for (int move : moves[j]) {
                    dp[i][j] = (dp[i][j] + dp[i - 1][move]) % MOD;
                }
            }
        }

        long result = 0;
        for (int i = 0; i <= 9; i++) {
            result = (result + dp[n][i]) % MOD;
        }

        return (int) result;
    }
}