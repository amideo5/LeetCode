class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int start = 0, max_length = 0;
        std::unordered_map<char, int> char_map;

        for (int end = 0; end < s.length(); end++) {
            if (char_map.find(s[end]) != char_map.end() && char_map[s[end]] >= start) {
                start = char_map[s[end]] + 1;
            }
            char_map[s[end]] = end;
            max_length = std::max(max_length, end - start + 1);
        }
        return max_length;
    }
};